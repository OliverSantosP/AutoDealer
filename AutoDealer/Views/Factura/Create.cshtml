@model AutoDealer.Models.Facturas

@{
    ViewBag.Title = "AutoDealer - Crear Factura";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div class="widget wred">
        <div class="widget-head">
            <div class="pull-left">Crear Factura</div>
            <div class="widget-icons pull-right">
                <a href="#" class="wminimize"><i class="icon-chevron-up"></i></a>
                <a href="#" class="wclose"><i class="icon-remove"></i></a>
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="widget-content">
            <div class="padd">
                <div class="row">
                    <div class="col-lg-2">
                        <div class="editor-label">
                            @Html.Label("Cliente:")
                        </div>
                        <div class="editor-field">
                            <select id="Compradores" name="Compradores">
                                @foreach (var item in @AutoDealer.Models.Personas.GetCompradores())
                                {
                                    <option value="@item.Id">@item.Nombre @item.Apellido</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="editor-label">
                            @Html.Label("Vendedor:")
                        </div>
                        <div class="editor-field">
                            <select id="Vendedores" name="Vendedores">
                                @foreach (var item in @AutoDealer.Models.Personas.GetVendedores())
                                {
                                    <option value="@item.Id">@item.Nombre @item.Apellido</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="right">
                            <div class="editor-label">
                                @Html.Label("Empresa:")
                            </div>
                            <div class="editor-field">
                                @Html.DropDownList("Empresa", String.Empty)
                                @Html.ValidationMessageFor(model => model.Empresa)
                            </div>
                            <br />
                            <div class="editor-label">
                                @Html.LabelFor(model => model.NCF)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.NCF)
                                @Html.ValidationMessageFor(model => model.NCF)
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <hr />
                @if (!String.IsNullOrEmpty(Request.QueryString["AutomovilId"]))
                {
                    int AutomovilId = Int32.Parse(Request.QueryString["AutomovilId"]);
                    var Automovil = AutoDealer.Models.Automoviles.GetAutomovil(AutomovilId);

                    <table>
                        <thead>
                            <tr>
                                <th>
                                    <div class="padd"><b>Id</b></div>
                                </th>
                                <th>
                                    <div class="padd"><b>Descripcion</b></div>
                                </th>
                                <th>
                                    <div class="padd"><b>Precio</b></div>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><div class="padd">@Automovil.Id</div></td>
                                <td><div class="padd">@Automovil.TiposAutomoviles.Fabricantes.Nombre @Automovil.TiposAutomoviles.Modelos.Nombre @Automovil.Year.Year @Automovil.Colores.Nombre</div></td>
                                <td><div class="padd" id="sum">RD @String.Format("{0:C}", @Automovil.PrecioVenta)</div></td>

                            </tr>
                        </tbody>
                    </table>
                }
                <br />
                <hr />
                <div class="row">
                    <div class="col-lg-2"></div>
                    <div class="col-lg-4"></div>
                    <div class="col-lg-4">
                        <div class="right">
                            @Html.Label("Total:")
                            <br />
                            <h5 id="subtotal"></h5>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.CostoTraspaso)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CostoTraspaso)
                                @Html.ValidationMessageFor(model => model.CostoTraspaso)
                            </div>
                            <br />
                            @Html.Label("Descuento:")
                            <br />
                            <input type="text" id="disc" name="disc" />

                            <br />
                            <br />
                            @Html.Label("Total General:")
                            <h4 id="total_item"></h4>
                        </div>
                    </div>
                </div>
                <p>
                    <input type="submit" value="Crear" />
                </p>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Volver a lista completa", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/js/jquery.calculation.js"></script>
    <script type="text/javascript">
        var bIsFirebugReady = (!!window.console && !!window.console.log);

        $(document).ready(
            function () {
                $("input[id^=disc]").bind("keyup", TotalGeneral);
                $("input[id^=CostoTraspaso]").bind("keyup", TotalGeneral);
                // run the calculation function now
                TotalGeneral();            });


        function TotalGeneral() {
            $("[id^=total_item]").calc(
            // the equation to use for the calculation
            "Sum + CostoTraspaso - Discount",
            // define the variables used in the equation, these can be a jQuery object
            {
                Sum: $("div[id^=sum]"),
                CostoTraspaso: $("input[id^=CostoTraspaso]"),
                Discount: $("[id^=disc]")
            },
            // define the formatting callback, the results of the calculation are passed to this function
            function (s) {
                // return the number as a dollar amount
                return "$" + s.toFixed(2);
            },
            // define the finish callback, this runs after the calculation has been complete
            function ($this) {
                // sum the total of the $("[id^=total_item]") selector
                var sum = $this.sum();

                $("#totalSum").text(
                    // round the results to 2 digits
                    "$" + sum.toFixed(2)
                );
            }
        )

            $("[id^=subtotal]").calc(
            // the equation to use for the calculation
            "Sum",
            // define the variables used in the equation, these can be a jQuery object
            {
                Sum: $("div[id^=sum]")
            },
            // define the formatting callback, the results of the calculation are passed to this function
            function (s) {
                // return the number as a dollar amount
                return "$" + s.toFixed(2);
            },
            // define the finish callback, this runs after the calculation has been complete
            function ($this) {
                // sum the total of the $("[id^=total_item]") selector
                var sum = $this.sum();

                $("#totalSum").text(
                    // round the results to 2 digits
                    "$" + sum.toFixed(2)
                );
            }
        )
        };
    </script>
}
